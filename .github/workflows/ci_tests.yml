name: "[CI] ExtraUserFields"
on: "push"

env:
  CI: "true"
  RUBY_VERSION: 3.1.1
  NODE_VERSION: 18.17.1
  CHROME_VERSION: 126.0.6478.182

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - uses: actions/setup-node@master
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
      - run: bundle exec rubocop -P
        name: Lint Ruby files
      - run: bundle exec erblint app/**/*.erb
        name: Lint ERB files
  tests:
    name: Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    services:
      postgres:
        image: postgres:11
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_PASSWORD: postgres
    env:
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_HOST: localhost
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@v0.3.0
        if: "github.ref != 'refs/heads/develop'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Get npm cache directory path
        id: npm-cache-dir-path
        run: echo "::set-output name=dir::$(npm get cache)-extra_user_fields"
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir-path.outputs.dir }}
          key: npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-
      - run: bundle exec rake test_app
        name: Create test app
      - run: mkdir -p ./spec/decidim_dummy_app/tmp/screenshots
        name: Create the screenshots folder
      - uses: nanasess/setup-chromedriver@v2
      - run: RAILS_ENV=test bundle exec rails assets:precompile
        name: Precompile assets
        working-directory: ./spec/decidim_dummy_app/
      - run: bundle exec rspec --exclude-pattern "spec/system/**/*_spec.rb"
        name: RSpec
      - uses: codecov/codecov-action@v3
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: screenshots
          path: ./spec/decidim_dummy_app/tmp/screenshots
          if-no-files-found: ignore
  system-tests:
    name: System tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    services:
      postgres:
        image: postgres:11
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_PASSWORD: postgres
    env:
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_HOST: localhost
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@v0.3.0
        if: "github.ref != 'refs/heads/develop'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
      - run: |
          sudo apt install libu2f-udev imagemagick
          wget --no-verbose -O /tmp/chrome.deb https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_${{env.CHROME_VERSION}}-1_amd64.deb
          sudo dpkg -i /tmp/chrome.deb
          rm /tmp/chrome.deb
      - uses: nanasess/setup-chromedriver@v2
        name: Install Chrome version ${{ env.CHROME_VERSION }}
        with:
          chromedriver-version: ${{ env.CHROME_VERSION }}
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Get npm cache directory path
        id: npm-cache-dir-path
        run: echo "dir=$(npm get cache)--extra_user_fields" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir-path.outputs.dir }}
          key: npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-
      - run: bundle exec rake test_app
        name: Create test app
      - run: mkdir -p ./spec/decidim_dummy_app/tmp/screenshots
        name: Create the screenshots folder
      - uses: nanasess/setup-chromedriver@v2
        with:
          chromedriver-version: ${{ env.CHROME_VERSION }}
      - run: RAILS_ENV=test bundle exec rails assets:precompile
        name: Precompile assets
        working-directory: ./spec/decidim_dummy_app/
      - run: bundle exec rspec spec/system
        name: RSpec
      - uses: codecov/codecov-action@v3
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: screenshots
          path: ./spec/decidim_dummy_app/tmp/screenshots
          if-no-files-found: ignore
